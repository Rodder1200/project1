window.royalEv={},function(){var e={isEmail:function(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isName:function(e){return/[\wа-я]+/gi.test(e)},isMsg:function(e){return/[\wа-я]+/gi.test(e)},isEmpty:function(e){return!!e}};royalEv.valid=e}(),function(){var t={},r=document.querySelector(".hero"),o=document.querySelectorAll(".points");function n(e){switch(e.preventDefault(),t.stop=!0,a(),e.target.className){case"points point0":r.style.background=t.bgs[0],e.target.classList.add("active");break;case"points point1":r.style.background=t.bgs[1],e.target.classList.add("active");break;case"points point2":r.style.background=t.bgs[2],e.target.classList.add("active");break;case"points point3":r.style.background=t.bgs[3],e.target.classList.add("active")}}function e(){t.counter<4&&!t.stop?(a(),r.style.background=t.bgs[t.counter],o[t.counter].classList.add("active"),t.counter++):t.stop||(a(),t.counter=1,r.style.background=t.bgs[0],o[0].classList.add("active")),t.carouselStart()}function a(){for(var e=0;e<o.length;e++)o[e].classList.remove("active")}t.bgs=["url('./images/bg1.jpg') center/cover no-repeat","url('./images/bg2.jpg') center/cover no-repeat","url('./images/bg3.jpg') center/cover no-repeat","url('./images/bg4.jpg') center/cover no-repeat"],t.counter=1,t.stop=!1,t.sliderSpeed=5e3,t.onPoint=function(){o[0].classList.add("active");for(var e=0;e<o.length;e++)o[e].addEventListener("click",n)},t.carouselStart=function(){t.stop||setTimeout(e,t.sliderSpeed)},t.carouselStop=function(){clearTimeout(t.CarouselStart)},royalEv.hero=t}(),function(){var n={},e=[].slice.call(document.querySelectorAll('a[href*="#"]'));n.animationTime=500,n.framesCount=100,n.start=e.forEach(function(o){o.addEventListener("click",function(e){e.preventDefault();var t=document.querySelector(o.getAttribute("href")).getBoundingClientRect().top,r=setInterval(function(){var e=t/n.framesCount;e>window.pageYOffset-t&&window.innerHeight+window.pageYOffset<document.body.offsetHeight?window.scrollBy(0,e):(window.scrollTo(0,t),clearInterval(r))},n.animationTime/n.framesCount)})}),royalEv.scroll=n}(),function(){var e={},t=document.querySelector(".nav_button");nav=document.querySelector(".nav"),e.open=function(){t.addEventListener("click",function(){nav.classList.toggle("nav_show"),"nav nav_show"==nav.className&&nav.addEventListener("click",function(){nav.classList.remove("nav_show")})})},royalEv.mobile=e}(),function(){var n={},e=document.querySelectorAll('[data-valid="required"]'),t=document.querySelectorAll(".contacts__item"),r=document.querySelector("form"),a=document.querySelector("[type=email]"),l=document.querySelector("input[type=text]"),s=document.querySelector("textarea");n.alertSuccess="Your message has been successfully sent.",n.alertFail="All fields must be filled out",n.failBorderStyle="1px solid #FA8072",n.successBorderStyle="1px solid green",n.onLoad=function(){n.onSubmit(),n.setCustomValidity(),n.onBlur()},n.onSubmit=function(){r.addEventListener("submit",n.isValid)},n.setCustomValidity=function(){for(var e=0;e<t.length;e++)t[e].addEventListener("invalid",function(e){e.target.setCustomValidity(""),e.target.validity.valid||e.target.setCustomValidity("Please fill out this field correctly.")}),t[e].addEventListener("input",function(e){e.target.setCustomValidity("")})},n.onBlur=function(){for(var e=0;e<t.length;e++)t[e].addEventListener("blur",function(e){var t=royalEv.valid.isEmail(e.target.value),r=royalEv.valid.isName(e.target.value),o=royalEv.valid.isMsg(e.target.value);e.target.style.border="",e.target==a&&t?e.target.style.border=n.successBorderStyle:e.target==l&&r?e.target.style.border=n.successBorderStyle:e.target==s&&o?e.target.style.border=n.successBorderStyle:""==e.target.value?e.target.style.border="":e.target.style.border=n.failBorderStyle})},n.isValid=function(){n.isAllCompleted(e)?(alert(n.alertSuccess),n.clearForm()):alert(n.alertFail)},n.isAllCompleted=function(e){for(var t=!0,r=0;r<e.length;r++)if(!royalEv.valid.isEmpty(e[r].value)){t=!1;break}return royalEv.valid.isEmail(a.value)||(t=!1),royalEv.valid.isName(l.value)||(t=!1),royalEv.valid.isMsg(s.value)||(t=!1),t},n.clearForm=function(){for(var e=0;e<t.length;e++)t[e].value="",t[e].style.border=""},royalEv.formContact=n}(),function(){var e={},t=document.querySelector("#testiNext"),r=document.querySelector("#testiPrev"),o=document.querySelectorAll(".testi__quote"),n=(document.querySelector(".testi__item"),document.querySelector(".testi__image")),a=document.querySelectorAll(".testi__author");e.bgs=["#fff url('./images/testi_item_image.png') center/cover no-repeat","#fff url('./images/jobs.png') center/cover no-repeat","#fff url('./images/gates.png') center/cover no-repeat","#fff url('./images/zuckerberg.png') center/cover no-repeat","#fff url('./images/bezos.png') center/cover no-repeat"],e.counter=0,e.goNextTesti=function(){t.addEventListener("click",function(){e.counter<o.length-1?(o[e.counter].style.display="none",a[e.counter].style.display="none",o[e.counter+1].style.display="block",a[e.counter+1].style.display="block",n.style.background=e.bgs[e.counter+1],e.counter++):(o[o.length-1].style.display="none",a[a.length-1].style.display="none",e.counter=0,o[e.counter].style.display="block",a[e.counter].style.display="block",n.style.background=e.bgs[e.counter])})},e.goPrevTesti=function(){r.addEventListener("click",function(){0<e.counter?(o[e.counter].style.display="none",a[e.counter].style.display="none",o[e.counter-1].style.display="block",a[e.counter-1].style.display="block",n.style.background=e.bgs[e.counter-1],e.counter--):(o[e.counter].style.display="none",a[e.counter].style.display="none",e.counter=4,o[o.length-1].style.display="block",a[o.length-1].style.display="block",n.style.background=e.bgs[o.length-1])})},royalEv.testi=e}(),royalEv.hero.onPoint(),royalEv.hero.carouselStart(),royalEv.scroll.start,royalEv.mobile.open(),royalEv.formContact.onLoad(),royalEv.testi.goNextTesti(),royalEv.testi.goPrevTesti();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
